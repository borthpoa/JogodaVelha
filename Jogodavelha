#Jogo da velha
#Vers√£o 1.1 NENE Vai pra casa
# Verifica Jogadas

from ipaddress import IPV4LENGTH
import os
import random
from tkinter import dialog
from  colorama import Fore, Back, Style

# Global Variables
jogarNovamente="s"
jogadas=0
quemJoga=2 #1 = CPU e 2 = Jogador
maxJogadas=9
vit="n"
velha=[
    [" "," "," "], # #L0C0 L0C1 L0C2
    [" "," "," "], # #L1C0 L1C1 L1C2
    [" "," "," "]  # #L2C0 L2C1 L2C2
]

def tela():
    global jogadas
    global quemJoga
    global vit
    global maxJogadas
    global velha
    os.system("cls")
    print("      0      1     2")
    print("0:    " + velha[0][0] + "  |  " + velha[0][1]+ "  |  " + velha[0][2] + "  |  " )
    print("----------------------")
    print("1:    " + velha[1][0] + "  |  " + velha[1][1]+ "  |  " + velha[1][2] + "  |  " )
    print("----------------------")
    print("2:    " + velha[2][0] + "  |  " + velha[2][1]+ "  |  " + velha[2][2] + "  |  " )
    print("----------------------")
    print("Jogadas:   " + Fore.LIGHTYELLOW_EX + str(jogadas) + Fore.RESET)
    
def jogadorJoga():
    global jogadas
    global quemJoga
    global vit
    global maxJogadas
    global velha
    
    if quemJoga == 2 and jogadas<maxJogadas:
        l=int(input("Linha..:  "))
        c=int(input("Coluna..:  "))
        try:
            while velha[l][c]!=" " :
                l=int(input("Linha..:  "))
                c=int(input("Coluna..:  "))
            velha[l][c]="EU"
            quemJoga=1
            jogadas+=1
        except:
            print("Linha e ou coluna invalida")
            
def cpuJoga():
    global jogadas
    global quemJoga
    global vit
    global maxJogadas
    global velha
    l=0
    c=0
    if quemJoga==1 and jogadas<maxJogadas:
        l=random.randrange(0,3)
        c=random.randrange(0,3)
        while velha[l][c]!=" " :
                l=int(input("Linha..:  "))
                c=int(input("Coluna..:  "))
        velha[l][c]="O"
        quemJoga=2
        jogadas+=1

def verificarVitoria():
    global jogadas
    global quemJoga
    global vit
    global maxJogadas
    global velha

    vitoria="n"  
    simbolos=["EU","O"]
    for s in simbolos:
        vitoria="n"
        #Verifica as linhas
        il=ic=0 #il indice linha ic indice coluna
        while il<3:
            soma=0
            ic=0
            while ic<3:
                if(velha[il][ic]==s):
                    soma+1
                ic+=1     
            if (soma==3):
                vitoria=s
                break
            il+=1 
        if (vitoria!="n"):    
            break

        #Verifica as colunas
        il=ic=0 #il indice linha ic indice coluna
        while ic<3:
            soma=0
            il=0
            while il<3:
                if(velha[il][ic]==s):
                    soma+1
                il+=1
            
            if (soma==3):
                vitoria=s
                break 
            ic+=1 
        if (vitoria!="n"):    
            break
        #verifica diagonal
        soma=0
        idiag=0
        while idiag<3:
            if (velha[idiag][idiag]==s):
                soma+=1
            idiag+=1
        if (soma==3):
                vitoria=s
                break 

        #verifica diagonal 2
        soma=0
        idiagLinha=0
        idiagColuna=2
        while idiagColuna>=3:
            if (velha[idiagLinha][idiagColuna]==s):
                soma+=1
            idiagLinha+=1
            idiagColuna-=1
        if (soma==3):
                vitoria=s
                break
    return vitoria

def redefinir():
    global jogadas
    global quemJoga
    global vit
    global maxJogadas
    global velha
    jogadas=0
    quemJoga=2
    maxJogadas=9
    vit="n"
    velha=[
        [" "," "," "], # #L0C0 L0C1 L0C2
        [" "," "," "], # #L1C0 L1C1 L1C2
        [" "," "," "]  # #L2C0 L2C1 L2C2
    ]

            
while True:
    tela()
    jogadorJoga()
    cpuJoga()
    tela()
    vit=verificarVitoria()
    if(vit!="n") or (jogadas>=maxJogadas):
        print("vitoria:...." +Fore.LIGHTBLUE_EX+ vit)
        break
    

#ultima de quarta
